=======
CHANGES
=======

-----
0.8.0
-----

In the interest of reproducing the same physical result regardless of
the units used, several numpy ufuncs now require dimensionless
operands:

* np.ceil
* np.floor
* np.fix
* np.rint

This change is commensurate with the behavior of np.mod, np.fmod,
and np.floor_division, which require the dimensionalities of the
operands to be equal (both quantities can be expressed with the same
units). The motivation for this behavior and the changes listed above
is that the operations on quantities should yield the same physical
result regardless of the units used at any point in the process. For
example, before quantities-0.8.0::

    foo = floor(3.3*pq.m)
    # foo = 3.0*pq.m
    bar = floor(3300.0*pq.mm)
    # bar = 3300.0*pq.mm
    fubar = foo != bar

This example indicates that floor (and friends) should only be defined
for pure numbers and dimensionless quantities. 

Bugs fixed
**********

* #501563 incorrect conversion ratio for gills/pints
* #515314 don't memoize simplified, fixes set_default_units
* #526008 add definition of stone, used in UK to measure mass
* #525991 support specifying units using unicode
* #529266 fix conversion to gallons

-----
0.7.0
-----

A critical problem was identified, caused by a conflict between farad
and Faraday identified in quantities <0.7. F is commonly used as a
symbol for both the farad and Faraday's constant. This is problematic
for quanitities, which registers its units so they can be accessed
using a string corresponding to the unit name or symbol. In this
case, the Faraday constant was registered after the farad, so any
quantity that was expressed in terms of farads would be incorrectly
simplified using the Faraday constant. This problem has been fixed
and the registry has been improved to prevent overwriting previously
registered names or symbols. F is now reserved for the farad.

Addition and subtraction of quantities with different but compatible
units is now supported. Additionally, changes have been made in the
forthcoming numpy-1.4.0 to extend this compatibility to other ufuncs
as well.

Numpydoc, an external package developed to extend Sphinx for the
numpy documentation project, is now required to build quantities'
documentation. 

Bugs fixed
**********

* #495181 epsilon_0 simplifies incorrectly
* #490323 bad spelling for polarizabilities
